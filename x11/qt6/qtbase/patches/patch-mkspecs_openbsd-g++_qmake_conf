$OpenBSD: patch-mkspecs_openbsd-g++_qmake_conf,v 1.1.1.1 2021/05/03 16:38:26 rsadowski Exp $

Index: mkspecs/openbsd-g++/qmake.conf
--- mkspecs/openbsd-g++/qmake.conf.orig
+++ mkspecs/openbsd-g++/qmake.conf
@@ -5,28 +5,36 @@
 MAKEFILE_GENERATOR      = UNIX
 QMAKE_PLATFORM          = openbsd
 
+include(../common/gcc-base-unix.conf)
+include(../common/g++-unix.conf)
 include(../common/bsd/bsd.conf)
 
 # Addon software goes into /usr/local on OpenBSD, by default we will look there
+LOCALBASE               = $$(LOCALBASE)
+isEmpty(LOCALBASE) {
+  LOCALBASE             = /usr/local
+}
+QMAKE_INCDIR_PREPEND    = /usr/local/lib/gcc/x86_64-unknown-openbsd6.6/8.3.0/include
 QMAKE_INCDIR_POST       = /usr/local/include
 QMAKE_LIBDIR_POST       = /usr/local/lib
 
 # System provided X11 defaults to X11R6 path on OpenBSD
-QMAKE_INCDIR_X11        = /usr/X11R6/include
-QMAKE_LIBDIR_X11        = /usr/X11R6/lib
-QMAKE_INCDIR_OPENGL     = /usr/X11R6/include
-QMAKE_LIBDIR_OPENGL     = /usr/X11R6/lib
+X11BASE                 = $$(X11BASE)
+isEmpty(X11BASE) {
+  X11BASE               = /usr/X11R6
+}
+QMAKE_INCDIR_X11        = $$X11BASE/include
+QMAKE_LIBDIR_X11        = $$X11BASE/lib
+QMAKE_INCDIR_OPENGL     = $$X11BASE/include
+QMAKE_LIBDIR_OPENGL     = $$X11BASE/lib
 
 QMAKE_RPATHDIR         += $$QMAKE_LIBDIR_X11
 
-include(../common/gcc-base-unix.conf)
-include(../common/g++-unix.conf)
-
 # System compiler is gcc 4.2.1 up to OpenBSD 6.0.
 # For proper C++11 support, we need to use a newer gcc from ports/packages,
 # where compiler commands are renamed to egcc/eg++. Therefore, redefine
 # mkspecs/common/g++-base.conf compiler commands
-QMAKE_CC                = egcc
+QMAKE_CC                = $$CC
 
 QMAKE_LINK_C            = $$QMAKE_CC
 QMAKE_LINK_C_SHLIB      = $$QMAKE_CC
@@ -36,8 +44,12 @@ QMAKE_CXX               = eg++
 QMAKE_LINK              = $$QMAKE_CXX
 QMAKE_LINK_SHLIB        = $$QMAKE_CXX
 
+QMAKE_OPENBSD_SHLIB    = 1
 
 # Reset g++-unix.conf's NOUNDEF flags as OpenBSD libc can't handle environ
+QMAKE_LFLAGS_SONAME     =
+QMAKE_LFLAGS_NEW_DTAGS  =
+ 
 QMAKE_LFLAGS_NOUNDEF    =
 
 load(qt_config)
